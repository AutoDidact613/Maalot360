{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\This User\\\\Documents\\\\reactP\\\\my-store\\\\src\\\\Context\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  logoutUser: () => {},\n  loginUser: () => {},\n  registerUser: () => {},\n  users: [],\n  addUser: () => {},\n  getUsers: () => [],\n  isAdmin: false // הוספת שדה לזהות אם המשתמש הוא מנהל\n});\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false); // מצב לזיהוי אם המשתמש הוא מנהל\n\n  const addUser = userData => {\n    setUsers(prevUsers => [...prevUsers, userData]);\n  };\n  const getUsers = () => users;\n  const logoutUser = () => {\n    setCurrentUser(null);\n    setIsAdmin(false); // נוודא שכאשר המשתמש מתנתק, הסטטוס לא יהיה מנהל\n  };\n  const loginUser = userData => {\n    setCurrentUser(userData);\n    const adminPassword = \"1234\";\n    const adminEmail = \"manager@gmail.com\";\n\n    // תעודת זהות של המנהל\n    if (userData.password === adminPassword && userData.email === adminEmail) {\n      setIsAdmin(true); // , הפוך את המשתמש למנהל\n    } else {\n      setIsAdmin(false);\n    }\n  };\n  const registerUser = userData => {\n    setCurrentUser(userData);\n    addUser(userData);\n    const adminID = \"123456789\"; // תעודת זהות של המנהל\n    if (userData.idNumber === adminID) {\n      setIsAdmin(true); // אם תעודת הזהות היא של המנהל, הפוך את המשתמש למנהל\n    } else {\n      setIsAdmin(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      currentUser,\n      logoutUser,\n      loginUser,\n      registerUser,\n      users,\n      addUser,\n      getUsers,\n      isAdmin // נוסיף את הסטטוס של המנהל פה\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"44RTmPIniAZzZmuLFw809gfbUMo=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","UserContext","currentUser","logoutUser","loginUser","registerUser","users","addUser","getUsers","isAdmin","UserProvider","children","_s","setCurrentUser","setUsers","setIsAdmin","userData","prevUsers","adminPassword","adminEmail","password","email","adminID","idNumber","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/This User/Documents/reactP/my-store/src/Context/UserContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nexport const UserContext = createContext({\r\n  currentUser: null,\r\n  logoutUser: () => {},\r\n  loginUser: () => {},\r\n  registerUser: () => {},\r\n  users: [],\r\n  addUser: () => {},\r\n  getUsers: () => [],\r\n  isAdmin: false  // הוספת שדה לזהות אם המשתמש הוא מנהל\r\n});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [isAdmin, setIsAdmin] = useState(false);  // מצב לזיהוי אם המשתמש הוא מנהל\r\n\r\n  const addUser = (userData) => {\r\n    setUsers((prevUsers) => [...prevUsers, userData]);\r\n  };\r\n\r\n  const getUsers = () => users;\r\n\r\n  const logoutUser = () => {\r\n    setCurrentUser(null);\r\n    setIsAdmin(false);  // נוודא שכאשר המשתמש מתנתק, הסטטוס לא יהיה מנהל\r\n  };\r\n\r\n  const loginUser = (userData) => {\r\n    setCurrentUser(userData);\r\n\r\n    const adminPassword = \"1234\"; \r\n    const adminEmail=\"manager@gmail.com\";\r\n\r\n     // תעודת זהות של המנהל\r\n    if (userData.password === adminPassword &&userData.email===adminEmail) {\r\n      setIsAdmin(true);  // , הפוך את המשתמש למנהל\r\n    } else {\r\n      setIsAdmin(false);\r\n    }\r\n  };\r\n\r\n  const registerUser = (userData) => {\r\n    setCurrentUser(userData);\r\n    addUser(userData);\r\n\r\n    const adminID = \"123456789\";  // תעודת זהות של המנהל\r\n    if (userData.idNumber === adminID) {\r\n      setIsAdmin(true);  // אם תעודת הזהות היא של המנהל, הפוך את המשתמש למנהל\r\n    } else {\r\n      setIsAdmin(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentUser,\r\n        logoutUser,\r\n        loginUser,\r\n        registerUser,\r\n        users,\r\n        addUser,\r\n        getUsers,\r\n        isAdmin  // נוסיף את הסטטוס של המנהל פה\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC;EACvCK,WAAW,EAAE,IAAI;EACjBC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAC;EACpBC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;EACnBC,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAC;EACtBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAC;EACjBC,QAAQ,EAAEA,CAAA,KAAM,EAAE;EAClBC,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACV,WAAW,EAAEW,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACQ,KAAK,EAAEQ,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEM,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAE;;EAEhD,MAAMS,OAAO,GAAIS,QAAQ,IAAK;IAC5BF,QAAQ,CAAEG,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,QAAQ,CAAC,CAAC;EACnD,CAAC;EAED,MAAMR,QAAQ,GAAGA,CAAA,KAAMF,KAAK;EAE5B,MAAMH,UAAU,GAAGA,CAAA,KAAM;IACvBU,cAAc,CAAC,IAAI,CAAC;IACpBE,UAAU,CAAC,KAAK,CAAC,CAAC,CAAE;EACtB,CAAC;EAED,MAAMX,SAAS,GAAIY,QAAQ,IAAK;IAC9BH,cAAc,CAACG,QAAQ,CAAC;IAExB,MAAME,aAAa,GAAG,MAAM;IAC5B,MAAMC,UAAU,GAAC,mBAAmB;;IAEnC;IACD,IAAIH,QAAQ,CAACI,QAAQ,KAAKF,aAAa,IAAGF,QAAQ,CAACK,KAAK,KAAGF,UAAU,EAAE;MACrEJ,UAAU,CAAC,IAAI,CAAC,CAAC,CAAE;IACrB,CAAC,MAAM;MACLA,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMV,YAAY,GAAIW,QAAQ,IAAK;IACjCH,cAAc,CAACG,QAAQ,CAAC;IACxBT,OAAO,CAACS,QAAQ,CAAC;IAEjB,MAAMM,OAAO,GAAG,WAAW,CAAC,CAAE;IAC9B,IAAIN,QAAQ,CAACO,QAAQ,KAAKD,OAAO,EAAE;MACjCP,UAAU,CAAC,IAAI,CAAC,CAAC,CAAE;IACrB,CAAC,MAAM;MACLA,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEf,OAAA,CAACC,WAAW,CAACuB,QAAQ;IACnBC,KAAK,EAAE;MACLvB,WAAW;MACXC,UAAU;MACVC,SAAS;MACTC,YAAY;MACZC,KAAK;MACLC,OAAO;MACPC,QAAQ;MACRC,OAAO,CAAE;IACX,CAAE;IAAAE,QAAA,EAEDA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjB,EAAA,CA1DWF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}