{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\This User\\\\Documents\\\\reactP\\\\my-store\\\\src\\\\Context\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useState } from 'react';\n\n// export const UserContext = createContext({\n//   currentUser: null,\n//   logoutUser: () => {},\n//   loginUser: () => {},\n//   registerUser: () => {},\n//   users: [],\n//   addUser: () => {},\n//   getUsers: () => [],\n//   isAdmin: false  // הוספת שדה לזהות אם המשתמש הוא מנהל\n// });\n\n// export const UserProvider = ({ children }) => {\n//   const [currentUser, setCurrentUser] = useState(null);\n//   const [users, setUsers] = useState([]);\n//   const [isAdmin, setIsAdmin] = useState(false);  // מצב לזיהוי אם המשתמש הוא מנהל\n\n//   const addUser = (userData) => {\n//     setUsers((prevUsers) => [...prevUsers, userData]);\n//   };\n\n//   const getUsers = () => users;\n\n//   const logoutUser = () => {\n//     setCurrentUser(null);\n//     setIsAdmin(false);  // נוודא שכאשר המשתמש מתנתק, הסטטוס לא יהיה מנהל\n//   };\n\n//   const loginUser = (userData) => {\n//     setCurrentUser(userData);\n\n//     const adminPassword = \"1234\"; \n//     const adminEmail=\"manager@gmail.com\";\n\n//      // תעודת זהות של המנהל\n//     if (userData.password === adminPassword && userData.email===adminEmail) {\n//       setIsAdmin(true);  //  , הפוך את המשתמש למנהל\n//     } else {\n//       setIsAdmin(false);\n//     }\n//   };\n\n//   const registerUser = (userData) => {\n//     setCurrentUser(userData);\n//     addUser(userData);\n\n//     const adminID = \"123456789\";  // תעודת זהות של המנהל\n//     if (userData.idNumber === adminID) {\n//       setIsAdmin(true);  // אם תעודת הזהות היא של המנהל, הפוך את המשתמש למנהל\n//     } else {\n//       setIsAdmin(false);\n//     }\n//   };\n\n//   return (\n//     <UserContext.Provider\n//       value={{\n//         currentUser,\n//         logoutUser,\n//         loginUser,\n//         registerUser,\n//         users,\n//         addUser,\n//         getUsers,\n//         isAdmin  // נוסיף את הסטטוס של המנהל פה\n//       }}\n//     >\n//       {children}\n//     </UserContext.Provider>\n//   );\n// };\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  logoutUser: () => {},\n  loginUser: () => {},\n  registerUser: () => {},\n  users: [],\n  addUser: () => {},\n  getUsers: () => [],\n  isAdmin: false\n});\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [users, setUsers] = useState([{\n    password: 1,\n    name: 'manager',\n    email: 'manager@gmail.com',\n    isAdmin: true\n  }, {\n    password: 2,\n    name: 'yaeli',\n    email: 'y@gmail.com',\n    isAdmin: false\n  }, {\n    password: 3,\n    name: 'miri',\n    email: 'm@gmail.com',\n    isAdmin: false\n  }, {\n    password: 4,\n    name: 'bimyamin',\n    email: 'bimyamin@gmail.com',\n    isAdmin: false\n  }]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const addUser = userData => {\n    setUsers(prevUsers => [...prevUsers, userData]);\n  };\n  const getUsers = () => users;\n  const logoutUser = () => {\n    setCurrentUser(null);\n    setIsAdmin(false);\n  };\n  const loginUser = (email, password) => {\n    const user = users.find(user => user.email === email && user.password === password);\n    if (user) {\n      setCurrentUser(user);\n      setIsAdmin(user.isAdmin);\n    } else {\n      alert('Invalid email or password');\n    }\n  };\n  const registerUser = userData => {\n    setCurrentUser(userData);\n    addUser(userData);\n    const adminEmail = 'manager@gmail.com';\n    const adminPassword = '1234';\n    if (userData.email === adminEmail && userData.password === adminPassword) {\n      setIsAdmin(true);\n    } else {\n      setIsAdmin(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      currentUser,\n      logoutUser,\n      loginUser,\n      registerUser,\n      users,\n      addUser,\n      getUsers,\n      isAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"ScZqPoHCcns20PBY3eZgiXxwetc=\");\n_c = UserProvider;\nfunction AdminPanel() {\n  _s2();\n  const {\n    users,\n    isAdmin\n  } = useContext(UserContext);\n  if (!isAdmin) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"You are not authorized to view this page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u05E4\\u05D0\\u05E0\\u05DC \\u05DE\\u05E0\\u05D4\\u05DC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [user.name, \" (\", user.email, \")\"]\n      }, user.email, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s2(AdminPanel, \"7xOs9GtA+0O2juHTAg0k/G5I14Y=\");\n_c2 = AdminPanel;\nexport { AdminPanel };\nvar _c, _c2;\n$RefreshReg$(_c, \"UserProvider\");\n$RefreshReg$(_c2, \"AdminPanel\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","UserContext","currentUser","logoutUser","loginUser","registerUser","users","addUser","getUsers","isAdmin","UserProvider","children","_s","setUsers","password","name","email","setCurrentUser","setIsAdmin","userData","prevUsers","user","find","alert","adminEmail","adminPassword","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","AdminPanel","_s2","map","_c2","$RefreshReg$"],"sources":["C:/Users/This User/Documents/reactP/my-store/src/Context/UserContext.js"],"sourcesContent":["// import React, { createContext, useState } from 'react';\r\n\r\n// export const UserContext = createContext({\r\n//   currentUser: null,\r\n//   logoutUser: () => {},\r\n//   loginUser: () => {},\r\n//   registerUser: () => {},\r\n//   users: [],\r\n//   addUser: () => {},\r\n//   getUsers: () => [],\r\n//   isAdmin: false  // הוספת שדה לזהות אם המשתמש הוא מנהל\r\n// });\r\n\r\n// export const UserProvider = ({ children }) => {\r\n//   const [currentUser, setCurrentUser] = useState(null);\r\n//   const [users, setUsers] = useState([]);\r\n//   const [isAdmin, setIsAdmin] = useState(false);  // מצב לזיהוי אם המשתמש הוא מנהל\r\n\r\n//   const addUser = (userData) => {\r\n//     setUsers((prevUsers) => [...prevUsers, userData]);\r\n//   };\r\n\r\n//   const getUsers = () => users;\r\n\r\n//   const logoutUser = () => {\r\n//     setCurrentUser(null);\r\n//     setIsAdmin(false);  // נוודא שכאשר המשתמש מתנתק, הסטטוס לא יהיה מנהל\r\n//   };\r\n\r\n//   const loginUser = (userData) => {\r\n//     setCurrentUser(userData);\r\n\r\n//     const adminPassword = \"1234\"; \r\n//     const adminEmail=\"manager@gmail.com\";\r\n\r\n//      // תעודת זהות של המנהל\r\n//     if (userData.password === adminPassword && userData.email===adminEmail) {\r\n//       setIsAdmin(true);  //  , הפוך את המשתמש למנהל\r\n//     } else {\r\n//       setIsAdmin(false);\r\n//     }\r\n//   };\r\n\r\n//   const registerUser = (userData) => {\r\n//     setCurrentUser(userData);\r\n//     addUser(userData);\r\n\r\n//     const adminID = \"123456789\";  // תעודת זהות של המנהל\r\n//     if (userData.idNumber === adminID) {\r\n//       setIsAdmin(true);  // אם תעודת הזהות היא של המנהל, הפוך את המשתמש למנהל\r\n//     } else {\r\n//       setIsAdmin(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <UserContext.Provider\r\n//       value={{\r\n//         currentUser,\r\n//         logoutUser,\r\n//         loginUser,\r\n//         registerUser,\r\n//         users,\r\n//         addUser,\r\n//         getUsers,\r\n//         isAdmin  // נוסיף את הסטטוס של המנהל פה\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </UserContext.Provider>\r\n//   );\r\n// };\r\nimport React, { createContext, useState, useContext } from 'react';\r\n\r\nexport const UserContext = createContext({\r\n  currentUser: null,\r\n  logoutUser: () => {},\r\n  loginUser: () => {},\r\n  registerUser: () => {},\r\n  users: [],\r\n  addUser: () => {},\r\n  getUsers: () => [],\r\n  isAdmin: false,\r\n});\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [users, setUsers] = useState([\r\n    { password: 1, name: 'manager', email: 'manager@gmail.com', isAdmin: true },\r\n    { password: 2, name: 'yaeli', email: 'y@gmail.com', isAdmin: false },\r\n    { password: 3, name: 'miri', email: 'm@gmail.com', isAdmin: false },\r\n    { password: 4, name: 'bimyamin', email: 'bimyamin@gmail.com', isAdmin: false },\r\n  ]);\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const addUser = (userData) => {\r\n    setUsers((prevUsers) => [...prevUsers, userData]);\r\n  };\r\n\r\n  const getUsers = () => users;\r\n\r\n  const logoutUser = () => {\r\n    setCurrentUser(null);\r\n    setIsAdmin(false);\r\n  };\r\n\r\n  const loginUser = (email, password) => {\r\n    const user = users.find(\r\n      (user) => user.email === email && user.password === password\r\n    );\r\n    if (user) {\r\n      setCurrentUser(user);\r\n      setIsAdmin(user.isAdmin);\r\n    } else {\r\n      alert('Invalid email or password');\r\n    }\r\n  };\r\n\r\n  const registerUser = (userData) => {\r\n    setCurrentUser(userData);\r\n    addUser(userData);\r\n\r\n    const adminEmail = 'manager@gmail.com';\r\n    const adminPassword = '1234';\r\n    if (userData.email === adminEmail && userData.password === adminPassword) {\r\n      setIsAdmin(true);\r\n    } else {\r\n      setIsAdmin(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        currentUser,\r\n        logoutUser,\r\n        loginUser,\r\n        registerUser,\r\n        users,\r\n        addUser,\r\n        getUsers,\r\n        isAdmin,\r\n      }}\r\n    >\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nfunction AdminPanel() {\r\n  const { users, isAdmin } = useContext(UserContext);\r\n  if (!isAdmin) {\r\n    return <div>You are not authorized to view this page.</div>;\r\n  }\r\n  return (\r\n    <div>\r\n      <h2>פאנל מנהל</h2>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li key={user.email}>\r\n            {user.name} ({user.email})\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport { AdminPanel };\r\n"],"mappings":";;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC;EACvCM,WAAW,EAAE,IAAI;EACjBC,UAAU,EAAEA,CAAA,KAAM,CAAC,CAAC;EACpBC,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;EACnBC,YAAY,EAAEA,CAAA,KAAM,CAAC,CAAC;EACtBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAC;EACjBC,QAAQ,EAAEA,CAAA,KAAM,EAAE;EAClBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CACjC;IAAEiB,QAAQ,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,KAAK,EAAE,mBAAmB;IAAEP,OAAO,EAAE;EAAK,CAAC,EAC3E;IAAEK,QAAQ,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE,aAAa;IAAEP,OAAO,EAAE;EAAM,CAAC,EACpE;IAAEK,QAAQ,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,aAAa;IAAEP,OAAO,EAAE;EAAM,CAAC,EACnE;IAAEK,QAAQ,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE,oBAAoB;IAAEP,OAAO,EAAE;EAAM,CAAC,CAC/E,CAAC;EACF,MAAM,CAACP,WAAW,EAAEe,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,OAAO,EAAES,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,OAAO,GAAIY,QAAQ,IAAK;IAC5BN,QAAQ,CAAEO,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,QAAQ,CAAC,CAAC;EACnD,CAAC;EAED,MAAMX,QAAQ,GAAGA,CAAA,KAAMF,KAAK;EAE5B,MAAMH,UAAU,GAAGA,CAAA,KAAM;IACvBc,cAAc,CAAC,IAAI,CAAC;IACpBC,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAMd,SAAS,GAAGA,CAACY,KAAK,EAAEF,QAAQ,KAAK;IACrC,MAAMO,IAAI,GAAGf,KAAK,CAACgB,IAAI,CACpBD,IAAI,IAAKA,IAAI,CAACL,KAAK,KAAKA,KAAK,IAAIK,IAAI,CAACP,QAAQ,KAAKA,QACtD,CAAC;IACD,IAAIO,IAAI,EAAE;MACRJ,cAAc,CAACI,IAAI,CAAC;MACpBH,UAAU,CAACG,IAAI,CAACZ,OAAO,CAAC;IAC1B,CAAC,MAAM;MACLc,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,MAAMlB,YAAY,GAAIc,QAAQ,IAAK;IACjCF,cAAc,CAACE,QAAQ,CAAC;IACxBZ,OAAO,CAACY,QAAQ,CAAC;IAEjB,MAAMK,UAAU,GAAG,mBAAmB;IACtC,MAAMC,aAAa,GAAG,MAAM;IAC5B,IAAIN,QAAQ,CAACH,KAAK,KAAKQ,UAAU,IAAIL,QAAQ,CAACL,QAAQ,KAAKW,aAAa,EAAE;MACxEP,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,MAAM;MACLA,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACElB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IACnBC,KAAK,EAAE;MACLzB,WAAW;MACXC,UAAU;MACVC,SAAS;MACTC,YAAY;MACZC,KAAK;MACLC,OAAO;MACPC,QAAQ;MACRC;IACF,CAAE;IAAAE,QAAA,EAEDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACnB,EAAA,CA9DWF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAgEzB,SAASuB,UAAUA,CAAA,EAAG;EAAAC,GAAA;EACpB,MAAM;IAAE5B,KAAK;IAAEG;EAAQ,CAAC,GAAGX,UAAU,CAACG,WAAW,CAAC;EAClD,IAAI,CAACQ,OAAO,EAAE;IACZ,oBAAOT,OAAA;MAAAW,QAAA,EAAK;IAAyC;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC7D;EACA,oBACE/B,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAS;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB/B,OAAA;MAAAW,QAAA,EACGL,KAAK,CAAC6B,GAAG,CAAEd,IAAI,iBACdrB,OAAA;QAAAW,QAAA,GACGU,IAAI,CAACN,IAAI,EAAC,IAAE,EAACM,IAAI,CAACL,KAAK,EAAC,GAC3B;MAAA,GAFSK,IAAI,CAACL,KAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACG,GAAA,CAjBQD,UAAU;AAAAG,GAAA,GAAVH,UAAU;AAmBnB,SAASA,UAAU;AAAG,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}